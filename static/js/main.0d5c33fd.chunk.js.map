{"version":3,"sources":["redux/reducers.js","components/Header.js","components/Streams.js","components/StreamsContainer.js","App.js","redux/store.js","index.js"],"names":["SET_TOKEN","SET_STREAMS","initialState","token","streams","setStreams","type","Header","props","useSelector","state","api","dispatch","useDispatch","className","onClick","axios","get","headers","then","response","data","Streams","map","stream","src","thumbnail_url","replace","alt","game_name","user_name","viewer_count","href","user_login","StreamsContainer","clientId","useEffect","post","access_token","setToken","App","rootReducer","combineReducers","action","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"sNAAaA,EAAY,YACZC,EAAc,cAErBC,EAAe,CACjBC,MAAO,GACPC,QAAS,IA2BAC,EAAa,SAACD,GAAD,MAAc,CACpCE,KAAML,EACNG,Y,OCQWG,EApCC,SAACC,GACb,IAAML,EAAQM,aAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAIR,SACvCS,EAAWC,cAsBjB,OACI,yBAAQC,UAAU,SAAlB,UACI,kEACA,wBAAQA,UAAU,iBAClBC,QArBe,WAEHC,IAAMC,IAAI,uCACN,CACIC,QAAS,CACL,cAAgB,UAAhB,OAA2Bf,GAC3B,YATf,oCAaIgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKA,QAC/BF,MAAK,SAAAf,GACFQ,EAASP,EAAWD,QAQpC,yBCAGkB,EA3BC,SAACd,GACb,IAAMJ,EAAUK,aAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAIP,WAC/C,OAAIA,EAII,qBAAKU,UAAU,eAAf,SACKV,EAAQmB,KAAI,SAAAC,GAAM,OACf,sBAAKV,UAAU,mBAAf,UAEI,qBAAKW,IACDD,EAAOE,cACNC,QAAQ,UAAW,OACnBA,QAAQ,WAAY,OAAQC,IAAI,KAEjC,8BAAG,yCAAH,IAAuBJ,EAAOK,aAC9B,8BAAG,8CAAwBL,EAAOM,aAClC,oBAAGhB,UAAU,UAAb,UAAwBU,EAAOO,aAAa,+CAC5C,mBAAGjB,UAAU,cAAckB,KAAI,gCAA2BR,EAAOS,YAAjE,qCAfb,8CCqCAC,EAvCU,SAAC1B,GAEtB,IAAML,EAAQM,aAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAIR,SACvCS,EAAWC,cAEXsB,EAAW,iCA4Bb,OAFJC,qBAvBuB,WACPjC,GACAa,IAAMqB,KAAN,sDAA0DF,EAA1D,0BAJK,iCAIL,mCACChB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKiB,gBAC/BnB,MAAK,SAAAhB,GACFS,EHOA,SAACT,GAAD,MAAY,CAChCG,KAAMN,EACNG,SGT6BoC,CAASpC,IAElBa,IAAMC,IAAI,uCACN,CACIC,QAAS,CACL,cAAgB,UAAhB,OAA2Bf,GAC3B,YAAagC,KAIxBhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKA,QAC/BF,MAAK,SAAAf,GACFQ,EAASP,EAAWD,YAMnB,IAGjB,cAAC,EAAD,KC3BGoC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCLAC,EAAcC,YAAgB,CAChC/B,ILGsB,WAAmC,IAAlCD,EAAiC,uDAAzBR,EAAcyC,EAAW,uCACxD,OAAOA,EAAOrC,MACV,KAAKN,EACH,OAAO,2BACAU,GADP,IAEIP,MAAOwC,EAAOxC,QAEpB,KAAKF,EAEH,OAAO,2BACAS,GADP,IAEIN,QAASuC,EAAOvC,UAGpB,QACE,OAAOM,MKfbkC,EAAQC,YAAYJ,GAE1BK,OAAOF,MAAQA,EAEAA,QCLfG,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.0d5c33fd.chunk.js","sourcesContent":["export const SET_TOKEN = 'SET_TOKEN';\r\nexport const SET_STREAMS = 'SET_STREAMS';\r\n\r\nconst initialState = {\r\n    token: '',\r\n    streams: []\r\n};\r\n\r\nexport const apiReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_TOKEN: \r\n          return {\r\n              ...state,\r\n              token: action.token\r\n          }\r\n        case SET_STREAMS: \r\n\r\n          return {\r\n              ...state,\r\n              streams: action.streams\r\n          }\r\n\r\n          default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setToken = (token) => ({\r\n    type: SET_TOKEN,\r\n    token\r\n})\r\n\r\nexport const setStreams = (streams) => ({\r\n    type: SET_STREAMS,\r\n    streams\r\n})\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  setStreams } from '../redux/reducers';\r\n\r\n\r\n const Header = (props) => {\r\n    const token = useSelector(state => state.api.token)\r\n    const dispatch = useDispatch();    \r\n\r\n    const clientId = '58qdnq5g4b69ahtaqe0lpeeku75r2g';\r\n    const clientSecret = 'h4d7y27vz1xs0894q4ypnjryg39lvk';\r\n\r\n    const setStreamsFunc = () => {\r\n\r\n                        axios.get('https://api.twitch.tv/helix/streams/',\r\n                            {\r\n                                headers: {\r\n                                    'Authorization': `Bearer ${token}`,\r\n                                    'Client-Id': clientId\r\n                                }\r\n                            }\r\n                        )\r\n                        .then(response => response.data.data)\r\n                        .then(streams => {\r\n                            dispatch(setStreams(streams))\r\n                        })\r\n                   \r\n            \r\n        }\r\n    return(\r\n        <header className='header'>\r\n            <h1>Most popular streamers on twitch</h1>\r\n            <button className='refresh-button' \r\n            onClick={setStreamsFunc}\r\n\r\n            >Refresh</button>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../index.css'\r\n\r\n\r\n\r\nconst Streams = (props) => {\r\n    const streams = useSelector(state => state.api.streams)\r\n    if(!streams) {\r\n       return  <div>Wait for..</div>\r\n    } else { \r\n        return (            \r\n            <div className='streams-list'>\r\n                {streams.map(stream => (\r\n                    <div className='stream-container'>\r\n                    \r\n                        <img src={\r\n                            stream.thumbnail_url\r\n                            .replace('{width}', '300')\r\n                            .replace('{height}', '200')} alt=\"\"/>\r\n                            \r\n                            <p><span>Game:</span> {stream.game_name}</p>\r\n                            <p><span>Streamer: </span>{stream.user_name}</p>\r\n                            <p className='viewers'>{stream.viewer_count}<span> viewers</span></p>\r\n                            <a className='twitch-link' href={`https://www.twitch.tv/${stream.user_login}`}>Watch on twitch</a>\r\n                    </div>\r\n                ))}\r\n             </div> \r\n        )\r\n    }\r\n    }\r\n\r\n\r\nexport default Streams; ","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setToken, setStreams }from '../redux/reducers';\r\nimport Streams from './Streams';\r\n\r\n\r\nconst StreamsContainer = (props) => {\r\n\r\n    const token = useSelector(state => state.api.token)\r\n    const dispatch = useDispatch();    \r\n\r\n    const clientId = '58qdnq5g4b69ahtaqe0lpeeku75r2g';\r\n    const clientSecret = 'h4d7y27vz1xs0894q4ypnjryg39lvk';\r\n\r\n    const setStreamsFunc = () => {\r\n                if(!token) {\r\n                    axios.post(`https://id.twitch.tv/oauth2/token?client_id=${clientId}&client_secret=${clientSecret}&grant_type=client_credentials`)\r\n                    .then(response => response.data.access_token)\r\n                    .then(token => {\r\n                        dispatch(setToken(token))\r\n\r\n                        axios.get('https://api.twitch.tv/helix/streams/',\r\n                            {\r\n                                headers: {\r\n                                    'Authorization': `Bearer ${token}`,\r\n                                    'Client-Id': clientId\r\n                                }\r\n                            }\r\n                        )\r\n                        .then(response => response.data.data)\r\n                        .then(streams => {\r\n                            dispatch(setStreams(streams))\r\n                        })\r\n                    })\r\n            }\r\n        }\r\n\r\n    useEffect(setStreamsFunc,[]);\r\n\r\n        return (\r\n            <Streams />\r\n        );\r\n}\r\n\r\n// export setStreamsFunc;   \r\nexport default StreamsContainer; ","import React from 'react';\nimport Header from './components/Header'\n\nimport StreamsContainer from './components/StreamsContainer'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <StreamsContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\r\nimport {apiReducer }from './reducers'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    api: apiReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}